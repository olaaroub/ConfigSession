#!/bin/bash
set -e

echo "Updating dependencies.."

sudo apt update
sudo apt upgrade
sudo apt install -y git curl zsh
chsh -s $(which zsh) #makes zsh your default shell
echo "installing oh-my-zsh.."
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

echo "Installing Kitty terminal..."

curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
# Create symbolic links to add kitty and kitten to PATH (assuming ~/.local/bin is in
# your system-wide PATH)
mkdir ~/.local/bin/

ln -sf ~/.local/kitty.app/bin/kitty ~/.local/kitty.app/bin/kitten ~/.local/bin/
# Place the kitty.desktop file somewhere it can be found by the OS
cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications/
# If you want to open text files and images in kitty via your file manager also add the kitty-open.desktop file
cp ~/.local/kitty.app/share/applications/kitty-open.desktop ~/.local/share/applications/
# Update the paths to the kitty and its icon in the kitty desktop file(s)
sed -i "s|Icon=kitty|Icon=$(readlink -f ~)/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty*.desktop
sed -i "s|Exec=kitty|Exec=$(readlink -f ~)/.local/kitty.app/bin/kitty|g" ~/.local/share/applications/kitty*.desktop
# Make xdg-terminal-exec (and hence desktop environments that support it use kitty)
echo 'kitty.desktop' > ~/.config/xdg-terminals.list

echo "Creating kitty.conf"

CONFIG_FILE =$(cat << EOF
# terminal startup mode
startup_session ~/.config/kitty/sessions/startup.conf

remember_window_size  no
initial_window_width  1366
initial_window_height 768

hide_window_decorations yes


font_family FiraCodeNerdFont
italic_font auto
bold_italic_font auto
font_size 10
# url_color #d65c9d
detect_urls yes
url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
open_url_with default
url_style curly
cursor #8fee96
copy_on_select yes


cursor_shape underline
cursor_underline_thickness 2.0

THEME_CONTENT
term xterm-256color

background_opacity 0.4
# color0 #000000
# color8 #767676
# color1 #cc0403
# color9 #f2201f
# color2  #19cb00
# color10 #23fd00
# color3  #cecb00
# color11 #fffd00
# color4  #0d73cc
# color12 #1a8fff
# color5  #cb1ed1
# color13 #fd28ff
# color6  #0dcdcd
# color14 #14ffff
# color7  #dddddd
# color15 #ffffff


# BEGIN_KITTY_THEME
# Vibrant Ink
include current-theme.conf
# END_KITTY_THEME
EOF
)
echo "$CONFIG_FILE" > ~/.config/kitty/kitty.conf


mkdir -p ~/.config/kitty/sessions/

cat > ~/.config/kitty/sessions/startup.conf << EOF
os_window_state maximized
EOF

THEME_CONF =$(cat << EOF
# This file is auto-generated by shipwright.nvim
# vim:ft=kitty
## name: duckbones
## author: Michael Chris Lopez
## license: MIT
## upstream: https://github.com/mcchrish/zenbones.nvim/raw/main/extras/kitty/duckbones.conf
## blurb: A zenbones variant inspired by Spaceduck.
foreground                      #EBEFC0
background                      #0E101A
selection_foreground            #EBEFC0
selection_background            #37382D
# Cursor colors
cursor                          #EDF2C2
cursor_text_color               #0E101A
# URL underline color when hovering with mouse
# kitty window border colors
# OS Window titlebar colors
# Tab bar colors
active_tab_foreground           #EBEFC0
active_tab_background           #4D3191
inactive_tab_foreground         #EBEFC0
inactive_tab_background         #232738
# Colors for marks (marked text in the terminal)
# The basic 16 colors
# black
color0 #0E101A
color8 #2B2F46
# red
color1 #E03600
color9 #FF4821
# green
color2  #5DCD97
color10 #58DB9E
# yellow
color3  #E39500
color11 #F6A100
# blue
color4  #00A3CB
color12 #00B4E0
# magenta
color5  #795CCC
color13 #B3A1E6
# cyan
color6  #00A3CB
color14 #00B4E0
# white
color7  #EBEFC0
color15 #B3B692
# You can set the remaining 240 colors as color16 to color255.

EOF
)

echo "$THEME_CONF" > ~/.config/kitty/current-theme.conf

git clone https://github.com/dexpota/kitty-themes.git ~/.config/kitty/kitty-themes


echo "Creating .zshrc file"


ZSHRC =$(cat << MEOF
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"


# Define multiple ASCII arts
typeset -a ascii_arts

ascii_arts+=("$(<<'EOF1'
           _..._
         .'     '.
        /  _   _  \
        | (o)_(o) |
         \(     ) /
         //'._.'\ \
        //   .   \ \
       ||   .     \ \
       |\   :     / |
       \ `) '   (`  /_
     _)``".____,.'"` (_
     )     )'--'(     (
      '---`      `---`
EOF1
)")

 ascii_arts+=("$(<<'EOF2'
        _____
      / 0 0 \
     |   ∆   |__
     \_______/  \
      |       |  \
      |_______|   \
      /       \___/
     / * * * * \
    /___________\
EOF2
 )")

 ascii_arts+=("$(<<'EOF3'
     .--.
    |o_o |
    |:_/ |
   //   \ \
  (|     | )
 /'\_   _/`\
 \___)=(___/
EOF3
 )")

# Add more arts using the same pattern...

# Random ASCII art selection
selected_art=${ascii_arts[$(( (RANDOM % ${#ascii_arts[@]}) + 1 ))]}

# Display selected ASCII art

echo "$selected_art"

emojis=("🎯" "🏹" "🚀" "💻" "⌨️" "🐞" "⚡" "🔥" "🚧" "🎮" "🤖" "💡" "🧠" "🛠️" "🚀" "🏆" "✨" "👾" "🔧" "📈")

expressions=(
	"Talk is cheap. Show me the code. - Linus Torvalds"
	"There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors."
	"Code never lies, comments sometimes do. - Ron Jeffries"
	"Why do programmers prefer dark mode? Because light attracts bugs!"
	"First solve the problem, then write the code. - John Johnson"
	"Debugging: Being the detective in a crime movie where you're also the murderer."
	"Simplicity is the soul of efficiency. - Austin Freeman"
	"Why do Java developers wear glasses? Because they can't C#!"
	"Make it work, make it right, make it fast. - Kent Beck"
	"There are 10 types of people: those who understand binary and those who don't."
	"The best error message is the one that never shows up. - Thomas Fuchs"
	"My code works...but I have no idea why."
	"Any fool can write code that a computer can understand. Good programmers write code that humans can understand. - Martin Fowler"
	"Why was the JavaScript developer sad? He didn't Node how to Express himself."
	"Keep calm and commit often."
	"I'm not a great programmer; I'm just a good programmer with great habits. - Kent Beck"
	"How many programmers does it take to change a light bulb? None, that's a hardware problem!"
	"The only way to learn a new programming language is by writing programs in it. - Dennis Ritchie"
	"What do you call a programmer from Finland? Nerdic."
	"Premature optimization is the root of all evil. - Donald Knuth"
	"Why do programmers hate nature? It has too many bugs."
	"Clean code always looks like it was written by someone who cares. - Robert C. Martin"
	"Hardware: The parts of a computer that can be kicked."
	"If at first you don't succeed, call it version 1.0."
	"Programming is 10% writing code and 90% understanding why it's not working."
)

RANDOM1=$$$(date +%s)
RANDOM2=$$$(date +%s)
selectedexpression=${expressions[$RANDOM1 % ${#expressions[@]} +1]}
selectedemoji=${emojis[$RANDOM2 % ${#emojis[@]} +1]}
echo "\n  ${selectedemoji} \"${selectedexpression}\"\n"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="muse"
ZSH_THEME="powerlevel10k/powerlevel10k"
#ZSH_THEME="powerlevel10k/powerlevel10k"
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#plugins=(git)
ZSH_DISABLE_COMPFIX=true

plugins=( git zsh-syntax-highlighting zsh-autosuggestions )
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

if [ -x "$(command -v exa)" ]; then
    alias ls="exa --icons --color=always"
    alias la="exa --long --icons --all --group"
    alias lt="exa --icons -T"
fi
# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias makef="make fclean"
alias format="python3 -m c_formatter_42"
alias xclean="/bin/bash $HOME/xclean.sh"
alias commit="git commit -m"
alias add="git add ."
alias push="git push"
alias status="git status"
alias checkout="git checkout"
alias lock="ft_lock"
alias nvim="~/squashfs-root/usr/bin/nvim"
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
source ~/powerlevel10k/powerlevel10k.zsh-theme
alias xclean="/bin/bash $HOME/xclean.sh"
MEOF
)
echo "$ZSHRC" > ~/.zshrc


echo "installing utils for zsh"


git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k

